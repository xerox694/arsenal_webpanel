# Arsenal V4 - Configuration Render Compl√®te
# ==========================================

# Build script pour Render
build: |
  echo "üöÄ Installation Arsenal V4..."
  
  # Mise √† jour syst√®me
  apt-get update -y
  
  # Installation FFmpeg pour la musique
  apt-get install -y ffmpeg
  
  # Installation des d√©pendances Python
  pip install --upgrade pip
  pip install -r requirements.txt
  
  # V√©rification de l'installation
  python -c "import discord; print(f'Discord.py {discord.__version__} install√©')"
  
  # Cr√©ation des r√©pertoires n√©cessaires
  mkdir -p logs backups data temp
  
  # Configuration des permissions
  chmod +x launcher.py
  chmod +x deploy.py
  
  echo "‚úÖ Arsenal V4 pr√™t pour le d√©ploiement !"

# Variables d'environnement par d√©faut
env:
  PYTHONPATH: "/opt/render/project/src"
  PYTHONUNBUFFERED: "1"
  ENVIRONMENT: "production"
  DEBUG: "false"
  
# Configuration des services
services:
  # Bot Discord principal
  discord_bot:
    type: worker
    plan: starter
    build_command: "bash build.sh"
    start_command: "python launcher.py"
    
    # Auto-restart en cas de crash
    auto_deploy: true
    
    # Health check
    health_check_path: "/health"
    
    # Ressources
    memory: 512MB
    cpu: 0.5
    
    # Variables d'environnement requises
    environment:
      - DISCORD_TOKEN  # √Ä d√©finir dans l'interface Render
      - DATABASE_URL: "./arsenal_v4.db"
      - LOG_LEVEL: "INFO"
      - MAX_WORKERS: "2"
      - ENABLE_MUSIC: "true"
      - ENABLE_GAMES: "true"
      - ENABLE_MODERATION: "true"
      - ENABLE_STATS: "true"
      - ENABLE_PERSONALIZATION: "true"
      - ENABLE_ADMIN: "true"

# Configuration avanc√©e
advanced:
  # Monitoring
  monitoring:
    enabled: true
    alerts:
      - type: "memory"
        threshold: "90%"
      - type: "cpu"
        threshold: "85%"
      - type: "error_rate"
        threshold: "5%"
  
  # Backup automatique
  backup:
    enabled: true
    schedule: "0 2 * * *"  # Tous les jours √† 2h
    retention: "30d"
    
  # Scaling automatique
  auto_scaling:
    enabled: false  # D√©sactiv√© pour le plan gratuit
    min_instances: 1
    max_instances: 3
    
# Scripts de d√©ploiement
scripts:
  pre_deploy: |
    echo "üîÑ Pr√©-d√©ploiement Arsenal V4..."
    python -c "
    import os
    import sys
    
    # V√©rifications de s√©curit√©
    required_vars = ['DISCORD_TOKEN']
    missing = [var for var in required_vars if not os.getenv(var)]
    
    if missing:
        print(f'‚ùå Variables manquantes: {missing}')
        sys.exit(1)
    
    print('‚úÖ Variables d\'environnement valid√©es')
    "
    
  post_deploy: |
    echo "üéâ Post-d√©ploiement Arsenal V4..."
    
    # Test de connectivit√©
    timeout 30 python -c "
    import asyncio
    import discord
    import os
    
    async def test_connection():
        try:
            client = discord.Client(intents=discord.Intents.default())
            
            @client.event
            async def on_ready():
                print(f'‚úÖ Test connexion r√©ussi: {client.user}')
                await client.close()
            
            await client.start(os.getenv('DISCORD_TOKEN'))
        except Exception as e:
            print(f'‚ùå Test connexion √©chou√©: {e}')
            exit(1)
    
    asyncio.run(test_connection())
    " || echo "‚ö†Ô∏è Test de connexion √©chou√© (timeout)"
    
    echo "üöÄ Arsenal V4 d√©ploy√© avec succ√®s !"

# Documentation des variables d'environnement
environment_documentation: |
  Variables d'environnement Arsenal V4:
  
  OBLIGATOIRES:
  - DISCORD_TOKEN: Token du bot Discord (depuis Discord Developer Portal)
  
  OPTIONNELLES:
  - DATABASE_URL: Chemin vers la base de donn√©es (d√©faut: ./arsenal_v4.db)
  - LOG_LEVEL: Niveau de logging (DEBUG/INFO/WARNING/ERROR) (d√©faut: INFO)
  - ENVIRONMENT: Environnement d'ex√©cution (development/production) (d√©faut: production)
  - DEBUG: Mode debug (true/false) (d√©faut: false)
  - MAX_WORKERS: Nombre de workers (d√©faut: 2)
  
  MODULES (true/false):
  - ENABLE_MUSIC: Activer le module musique (d√©faut: true)
  - ENABLE_GAMES: Activer les mini-jeux (d√©faut: true)
  - ENABLE_MODERATION: Activer la mod√©ration (d√©faut: true)
  - ENABLE_STATS: Activer les statistiques (d√©faut: true)
  - ENABLE_PERSONALIZATION: Activer la personnalisation (d√©faut: true)
  - ENABLE_ADMIN: Activer l'administration (d√©faut: true)
  
  PERFORMANCE:
  - CACHE_SIZE: Taille du cache en MB (d√©faut: 100)
  - DB_POOL_SIZE: Taille du pool de connexions DB (d√©faut: 10)
  - RATE_LIMIT_REQUESTS: Limite de requ√™tes par minute (d√©faut: 60)

# Commandes de diagnostic
diagnostic_commands:
  check_health: |
    echo "üè• Diagnostic de sant√© Arsenal V4..."
    
    # V√©rification Python
    python --version
    
    # V√©rification des modules
    python -c "
    modules = ['discord', 'sqlite3', 'aiohttp', 'PIL', 'matplotlib']
    for module in modules:
        try:
            __import__(module)
            print(f'‚úÖ {module}')
        except ImportError:
            print(f'‚ùå {module}')
    "
    
    # V√©rification de la base de donn√©es
    python -c "
    import sqlite3
    import os
    
    db_path = os.getenv('DATABASE_URL', './arsenal_v4.db')
    try:
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        cursor.execute('SELECT COUNT(*) FROM sqlite_master WHERE type=\"table\"')
        tables = cursor.fetchone()[0]
        print(f'‚úÖ Base de donn√©es: {tables} tables')
        conn.close()
    except Exception as e:
        print(f'‚ùå Base de donn√©es: {e}')
    "
    
    # V√©rification m√©moire
    python -c "
    import psutil
    memory = psutil.virtual_memory()
    print(f'üíæ M√©moire: {memory.percent}% utilis√©e')
    "
    
  view_logs: |
    echo "üìã Derniers logs Arsenal V4..."
    tail -n 50 arsenal_v4.log 2>/dev/null || echo "Aucun log trouv√©"
    
  restart_bot: |
    echo "üîÑ Red√©marrage Arsenal V4..."
    pkill -f "python launcher.py" || true
    sleep 2
    python launcher.py &
    echo "‚úÖ Bot red√©marr√©"

# Configuration des logs
logging:
  level: INFO
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  files:
    - path: "arsenal_v4.log"
      max_size: "10MB"
      backup_count: 5
    - path: "errors.log"
      level: ERROR
      max_size: "5MB"
      backup_count: 3

# Notifications
notifications:
  discord_webhook: ""  # Webhook pour notifications de d√©ploiement
  email: ""           # Email pour alertes critiques
  
  events:
    - deploy_success
    - deploy_failure
    - health_check_failure
    - memory_high
    - error_rate_high

# Instructions de d√©ploiement
deployment_instructions: |
  üìã INSTRUCTIONS DE D√âPLOIEMENT RENDER:
  
  1. üåê Connectez-vous sur https://render.com
  
  2. ‚ûï Cr√©ez un nouveau service "Worker"
  
  3. üîó Connectez votre repository GitHub
  
  4. ‚öôÔ∏è Configuration:
     ‚Ä¢ Type: Worker
     ‚Ä¢ Name: arsenal-v4-bot
     ‚Ä¢ Environment: Python 3
     ‚Ä¢ Build Command: pip install -r requirements.txt
     ‚Ä¢ Start Command: python launcher.py
     ‚Ä¢ Plan: Starter (recommand√©) ou Free
  
  5. üîë Variables d'environnement (Section Environment):
     ‚Ä¢ DISCORD_TOKEN: votre_token_discord_ici
     ‚Ä¢ ENVIRONMENT: production
     ‚Ä¢ DEBUG: false
     
     Optionnelles:
     ‚Ä¢ LOG_LEVEL: INFO
     ‚Ä¢ ENABLE_MUSIC: true
     ‚Ä¢ ENABLE_GAMES: true
     ‚Ä¢ (voir documentation compl√®te ci-dessus)
  
  6. üíæ Disque persistant (optionnel pour Free plan):
     ‚Ä¢ Name: arsenal-data
     ‚Ä¢ Mount Path: /opt/render/project/src
     ‚Ä¢ Size: 1GB
  
  7. üöÄ Cliquez sur "Create Web Service"
  
  8. ‚è≥ Attendez la fin du d√©ploiement (2-5 minutes)
  
  9. ‚úÖ V√©rifiez les logs pour confirmer le d√©marrage
  
  üÜò En cas de probl√®me:
  ‚Ä¢ V√©rifiez les logs dans l'onglet "Logs"
  ‚Ä¢ Confirmez que DISCORD_TOKEN est correct
  ‚Ä¢ Assurez-vous que le bot a les permissions n√©cessaires
  ‚Ä¢ Consultez le README.md pour plus d'aide

# D√©pannage courant
troubleshooting:
  bot_offline: |
    Le bot appara√Æt hors ligne:
    1. V√©rifiez que DISCORD_TOKEN est correct
    2. Confirmez que le service Render est en cours d'ex√©cution
    3. V√©rifiez les permissions du bot sur Discord
    4. Consultez les logs pour erreurs de connexion
    
  commands_not_working: |
    Les commandes ne fonctionnent pas:
    1. V√©rifiez que le bot a les permissions "Send Messages"
    2. Confirmez que le pr√©fixe est correct (! par d√©faut)
    3. V√©rifiez que les modules sont activ√©s
    4. Testez avec une commande simple comme !ping
    
  database_errors: |
    Erreurs de base de donn√©es:
    1. V√©rifiez que le disque persistant est configur√©
    2. Confirmez les permissions d'√©criture
    3. V√©rifiez l'espace disque disponible
    4. Consultez les logs d'erreur SQLite
    
  memory_issues: |
    Probl√®mes de m√©moire:
    1. Passez au plan Starter si en Free
    2. D√©sactivez les modules non essentiels
    3. R√©duisez CACHE_SIZE
    4. Red√©marrez le service

# Version et m√©tadonn√©es
metadata:
  version: "4.0.0"
  last_updated: "2024-01-XX"
  author: "Arsenal Team"
  license: "MIT"
  repository: "https://github.com/votre-repo/arsenal-v4"
  documentation: "https://github.com/votre-repo/arsenal-v4/wiki"
  support: "https://discord.gg/votre-serveur"
